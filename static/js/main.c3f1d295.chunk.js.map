{"version":3,"sources":["components/Header/Header.js","components/MoreInfo/MoreInfo.js","components/Map/Mapapi.js","components/PlaceDetail/PlaceDetails.js","components/List/List.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","bg","variant","Container","Brand","href","Toggle","Collapse","className","Text","MoreInfo","props","console","log","Modal","size","aria-labelledby","centered","closeButton","Body","Image","fluid","src","place","photo","images","large","url","name","address","city","state","postal_code","Row","Col","style","color","cursor","onClick","window","open","monday_open","monday_close","tuesday_open","tuesday_close","wednesday_open","wednesday_close","thursday_open","thursday_close","friday_open","friday_close","saturday_open","saturday_close","sunday_open","sunday_close","Footer","Button","Mapapi","show","center","lat","latitude","lng","longitude","useLoadScript","googleMapsApiKey","process","libraries","isLoaded","loadError","mapRef","useRef","onMapLoad","useCallback","map","current","mapContainerStyle","height","width","zoom","options","disableDefaultUI","zoomControl","onLoad","position","PlaceDetails","useState","modalShow","setModalShow","setShow","currentPosition","setCurrentPosition","success","coords","useEffect","navigator","geolocation","getCurrentPosition","userPosition","placePosition","haversine_m","haversine","haversine_miles","xs","md","Card","Title","day","Date","getDay","Saturday_close","closeDay","prevShow","onHide","List","places","overflow","id","App","setPlaces","getPlacesData","a","fetch","response","json","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3f1d295.chunk.js","sourcesContent":["import React from \"react\";\nimport { Navbar, Container } from \"react-bootstrap\";\nimport { VscLocation } from \"react-icons/vsc\";\n\nconst Header = () => {\n  return (\n    <>\n      <Navbar bg=\"primary\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand href=\"#\">Logo</Navbar.Brand>\n          <Navbar.Toggle />\n          <Navbar.Collapse className=\"justify-content-end\">\n            <Navbar.Text>Menu</Navbar.Text>\n            <Navbar.Text>\n              <VscLocation />\n              Truck Locator\n            </Navbar.Text>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Button, Modal, Image, Row, Col } from \"react-bootstrap\";\nimport { FaPhoneSquareAlt } from \"react-icons/fa\";\nimport { AiFillCar } from \"react-icons/ai\";\n\nconst MoreInfo = (props) => {\n  console.log(props);\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton></Modal.Header>\n      <Modal.Body>\n        <Image\n          fluid\n          src={\n            props.place.photo\n              ? props.place.photo.images.large.url\n              : \"https://www.foodserviceandhospitality.com/wp-content/uploads/2016/09/Restaurant-Placeholder-001.jpg\"\n          }\n        />\n\n        <h1>{props.place.name}</h1>\n        <p>\n          {props.place.address}\n          <br />\n          {props.place.city}, {props.place.state} {}\n          {props.place.postal_code}\n        </p>\n        <Row>\n          <Col>\n            <h5 style={{ color: \"orange\" }}>\n              <FaPhoneSquareAlt />\n              (xxx)xxx-xxxx\n            </h5>\n          </Col>\n          <Col>\n            <h5\n              style={{ color: \"orange\", cursor: \"pointer\" }}\n              onClick={() =>\n                window.open(\n                  // `https://www.google.com/maps/search/?api=1&query=${props.place.latitude},${props.place.longitude}`,\n                  `https://www.google.com/maps/search/?api=1&query=${props.place.address}%2C${props.place.city}%2C${props.place.state}%2C${props.place.postal_code}`,\n                  \"_blank\"\n                )\n              }\n            >\n              <AiFillCar />\n              Get Directions\n            </h5>\n          </Col>\n        </Row>\n        <Row>\n          <Col>Monday</Col>\n          <Col>\n            {props.place.monday_open} - {props.place.monday_close}\n          </Col>\n        </Row>\n        <Row>\n          <Col>Tuesday</Col>\n          <Col>\n            {props.place.tuesday_open} - {props.place.tuesday_close}\n          </Col>\n        </Row>\n        <Row>\n          <Col>Wednesday</Col>\n          <Col>\n            {props.place.wednesday_open} - {props.place.wednesday_close}\n          </Col>\n        </Row>\n        <Row>\n          <Col>Thursday</Col>\n          <Col>\n            {props.place.thursday_open} - {props.place.thursday_close}\n          </Col>\n        </Row>\n        <Row>\n          <Col>Friday</Col>\n          <Col>\n            {props.place.friday_open} - {props.place.friday_close}\n          </Col>\n        </Row>\n        <Row>\n          <Col>Saturday</Col>\n          <Col>\n            {props.place.saturday_open} - {props.place.saturday_close}\n          </Col>\n        </Row>\n        <Row>\n          <Col>Sunday</Col>\n          <Col>\n            {props.place.sunday_open} - {props.place.sunday_close}\n          </Col>\n        </Row>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n          variant=\"secondary\"\n          size=\"lg\"\n          onClick={() => window.open(props.place.url, \"_blank\")}\n        >\n          VIEW FULL DETAILS\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default MoreInfo;\n","import React, { useState, useCallback, useRef } from \"react\";\nimport { GoogleMap, useLoadScript, Marker } from \"@react-google-maps/api\";\nimport \"./map.css\";\n\nconst Mapapi = ({ place, show }) => {\n  const libraries = [\"places\"];\n  const mapContainerStyle = {\n    height: \"100vh\",\n    width: \"65vw\",\n  };\n  const center = { lat: place.latitude, lng: place.longitude };\n\n  const options = {\n    disableDefaultUI: true,\n    zoomControl: true,\n  };\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries,\n  });\n\n  const mapRef = useRef();\n  const onMapLoad = useCallback((map) => {\n    mapRef.current = map;\n  }, []);\n  if (loadError) return \"Error\";\n  if (!isLoaded) return \"Loading...\";\n\n  return (\n    <>\n      {show && (\n        <div className=\"map\">\n          <GoogleMap\n            mapContainerStyle={mapContainerStyle}\n            zoom={14}\n            center={center}\n            options={options}\n            onLoad={onMapLoad}\n          >\n            <Marker position={center} />\n          </GoogleMap>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Mapapi;\n","import React, { useState, useEffect } from \"react\";\nimport MoreInfo from \"../MoreInfo/MoreInfo\";\n// import Map from \"../Map/Map\";\nimport Mapapi from \"../Map/Mapapi\";\nimport { Row, Col, Button, Card } from \"react-bootstrap\";\nimport haversine from \"haversine-distance\";\n\nconst PlaceDetails = ({ place }) => {\n  const [modalShow, setModalShow] = useState(false);\n  const [show, setShow] = useState(false);\n  const [currentPosition, setCurrentPosition] = useState({});\n\n  const success = (position) => {\n    const currentPosition = {\n      lat: position.coords.latitude,\n      lng: position.coords.longitude,\n    };\n    setCurrentPosition(currentPosition);\n  };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(success);\n  }, []);\n\n  const userPosition = currentPosition;\n  console.log(userPosition);\n  const placePosition = { lat: place.latitude, lng: place.longitude };\n  console.log(placePosition);\n  const haversine_m = haversine(userPosition, placePosition);\n  console.log(haversine_m);\n  var haversine_miles = haversine_m * 0.000621; //Results in kilometers\n  console.log(haversine_miles);\n\n  // Get Map show with Marker\n  const handleButtonPress = () => setShow((prevShow) => !prevShow);\n\n  // Get close Day\n  const closeDay = () => {\n    let day;\n    switch (new Date().getDay()) {\n      case 0:\n        day = place.sunday_close;\n        break;\n      case 1:\n        day = place.monday_close;\n        break;\n      case 2:\n        day = place.tuesday_close;\n        break;\n      case 3:\n        day = place.wednesday_close;\n        break;\n      case 4:\n        day = place.wednesday_close;\n        break;\n      case 5:\n        day = place.friday_close;\n        break;\n      case 6:\n        day = place.Saturday_close;\n        break;\n      default:\n        day = \" 24 hrs\";\n    }\n    console.log(day);\n    return day;\n  };\n\n  return (\n    <>\n      <Row style={{ width: \"100%\" }}>\n        <Col xs={12} md={4}>\n          <Card>\n            <Card.Body>\n              <Row>\n                <Col>\n                  <Card.Title>{place.name}</Card.Title>\n                </Col>\n                <Col>\n                  <Card.Text>{haversine_miles} miles</Card.Text>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <Card.Text>\n                    <p>\n                      {place.address} <br />\n                      {place.city}, {place.state} {}\n                      {place.postal_code}\n                    </p>\n                    <p className=\"text-success\">\n                      {\" \"}\n                      Open today until {closeDay()}{\" \"}\n                    </p>\n                  </Card.Text>\n                </Col>\n                <Col></Col>\n              </Row>\n              <Row>\n                <Col>\n                  <Button\n                    variant=\"secondary\"\n                    onClick={() => {\n                      handleButtonPress();\n                      // Marker lat and lang to map\n                    }}\n                  >\n                    DIRECTIONS\n                  </Button>\n                </Col>\n                <Col>\n                  <Button\n                    variant=\"secondary\"\n                    onClick={() => setModalShow(true)}\n                  >\n                    MORE INFO\n                  </Button>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n          <MoreInfo\n            place={place}\n            show={modalShow}\n            onHide={() => setModalShow(false)}\n          />\n        </Col>\n        <Col xs={12} md={8}>\n          <Mapapi place={place} show={show} />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default PlaceDetails;\n","import React from \"react\";\nimport PlaceDetails from \"../PlaceDetail/PlaceDetails\";\nimport { Card } from \"react-bootstrap\";\n\nconst List = ({ places }) => {\n  return (\n    <Card style={{ height: \"100vh\", overflow: \"auto\" }}>\n      <Card.Body>\n        {places.map((place) => (\n          <PlaceDetails key={place.id} place={place} />\n        ))}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default List;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header/Header\";\nimport List from \"./components/List/List\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst App = () => {\n  const [places, setPlaces] = useState([]);\n\n  const getPlacesData = async () => {\n    const response = await fetch(\n      \"https://my.api.mockaroo.com/locations.json?key=a45f1200\"\n    );\n    const data = await response.json();\n    setPlaces(data);\n    // console.log(data)\n  };\n\n  useEffect(() => {\n    getPlacesData();\n  }, []);\n  return (\n    <>\n      <Header />\n      <List places={places} />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}